version: '3.8'

x-airflow-common:
  &airflow-common
  image: etl-airflow:latest
  environment:
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
    AIRFLOW__CORE__FERNET_KEY: ''
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__API__AUTH_BACKENDS: 'airflow.api.auth.backend.basic_auth'
  volumes:
    - ./dags:/opt/airflow/dags
    - airflow_logs:/opt/airflow/logs
    - airflow_plugins:/opt/airflow/plugins
  networks:
    - airflow
  restart: unless-stopped

services:

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../etl/sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - airflow
    restart: unless-stopped

  airflow-init:
    <<: *airflow-common
    command: >
      bash -c "
      /opt/airflow/wait-for-it.sh postgres:5432 --timeout=60 --strict -- \
      airflow db upgrade && \
      airflow users create \
      --username admin \
      --firstname Admin \
      --lastname User \
      --password password \
      --role Admin \
      --email admin@example.com
      "
    depends_on:
      - postgres
    restart: no

  airflow-webserver:
    <<: *airflow-common
    command: airflow webserver
    depends_on:
      - airflow-init
      - postgres
    ports:
      - "8080:8080"      

  airflow-scheduler:
    <<: *airflow-common
    command: airflow scheduler
    depends_on:
      - airflow-init
      - postgres

volumes:
  postgres_data:
  airflow_logs:
  airflow_plugins:

networks:
  airflow:
